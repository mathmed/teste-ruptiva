// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[SCREENS] UsersInfo Should render corretly 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  presentationStyle="overFullScreen"
  style={
    Array [
      Object {},
    ]
  }
  transparent={false}
  visible={false}
>
  <View
    style={
      Array [
        Object {
          "display": "flex",
          "height": "100%",
          "position": "relative",
        },
      ]
    }
  >
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <RCTScrollView
        bounces={false}
        contentContainerStyle={
          Object {
            "flex": 1,
          }
        }
        contentInsetAdjustmentBehavior="never"
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#000000AA",
                  "flex": 1,
                  "padding": 24,
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#e8e8e8",
                    "borderRadius": 5,
                    "elevation": 4,
                    "shadowOffset": Object {
                      "height": 4,
                      "width": 2,
                    },
                    "shadowOpacity": 0.24,
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000000DD",
                      "fontSize": 20,
                      "margin": 24,
                      "marginBottom": 0,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Atenção
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "padding": 24,
                      "paddingTop": 20,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#00000089",
                        "fontSize": 18,
                        "textAlign": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  Quer realmente deletar esse registro?
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {},
                    undefined,
                  ]
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#00000011",
                        "height": 1,
                      }
                    }
                  />
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "height": 46,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#0000FF99",
                              "fontWeight": "normal",
                              "textAlign": "center",
                              "textAlignVertical": "center",
                            }
                          }
                        >
                          Não
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "backgroundColor": "#00000011",
                          "width": 1,
                        }
                      }
                    />
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "height": 46,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#0000FF99",
                              "fontWeight": "bold",
                              "textAlign": "center",
                              "textAlignVertical": "center",
                            }
                          }
                        >
                          Sim
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </Modal>
    <Text
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 24,
            "fontWeight": "bold",
            "paddingTop": "10%",
            "textAlign": "center",
            "textTransform": "uppercase",
          },
        ]
      }
    >
      Cadastros
    </Text>
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "marginBottom": 20,
            "marginLeft": 20,
            "marginRight": 20,
            "marginTop": 20,
          },
        ]
      }
    >
      <RCTScrollView
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            colors={
              Array [
                "#fff",
              ]
            }
            onRefresh={[Function]}
            progressBackgroundColor="#ff9000"
          />
        }
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "bottom": 0,
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
            "position": "absolute",
            "width": "100%",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ff9000",
            "borderRadius": 10,
            "display": "flex",
            "height": 56,
            "justifyContent": "center",
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 0,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#312e38",
                "fontSize": 18,
                "fontWeight": "bold",
              },
            ]
          }
        >
          FECHAR
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
